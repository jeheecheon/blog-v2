# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: String!
  parentCategoryId: String
  isBottomLevel: Boolean!
  parentCategory: Category
}

type Post {
  id: String!
  title: String!
  content: String!
  uploadedAt: Timestamp!
  editedAt: Timestamp
  cover: String
  isPublic: Boolean!
  categoryId: String
  comments: [Comment!]!
  likesCount: Float!
  commentsCount: Float!
  isLiked: Boolean!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Comment {
  id: String!
  parentCommentId: String
  content: String!
  uploadedAt: Timestamp!
  isDeleted: Boolean!
  account: Account!
  comments: [Comment!]!
}

type Role {
  id: Float!
  name: String!
}

type Account {
  id: String!
  email: String!
  avatar: String
  createdAt: Timestamp!
  roles: [Role!]
}

type CountLikedPostsResult {
  likesCount: Float!
  isLiked: Boolean!
}

type Query {
  post(filter: GetPostFilter!): Post!
  posts(filter: ListPostsFilter, pagination: PaginationInput): [Post!]!
  comments(filter: ListCommentsFilter): [Comment!]!
  countLikedPosts(args: CountLikedPostsArgs!): Float!
  account(filter: GetAccountFilter!): Account!
  categories(filter: ListCategoriesFilter, pagination: PaginationInput): [Category!]!
}

input GetPostFilter {
  id: String!
}

input ListPostsFilter {
  categoryIds: [String!]
  isPublic: Boolean
}

input PaginationInput {
  skip: Int!
  take: Int!
}

input ListCommentsFilter {
  postId: String
}

input CountLikedPostsArgs {
  postId: String
}

input GetAccountFilter {
  id: String
  email: String
}

input ListCategoriesFilter {
  id: String
  parentCategoryId: String
  isBottomLevel: Boolean
}

type Mutation {
  upsertPost(args: UpsertPostArgs!): Post!
  upsertComment(args: UpsertCommentArgs!): Comment!
  likeOrUnlikePost(args: LikeOrUnlikePostArgs!): CountLikedPostsResult!
}

input UpsertPostArgs {
  id: String
  title: String!
  content: String!
  cover: String
  isPublic: Boolean!
  categoryId: String
  uploadedAt: Timestamp!
  editedAt: Timestamp
}

input UpsertCommentArgs {
  id: String
  postId: String
  content: String
  isDeleted: Boolean
}

input LikeOrUnlikePostArgs {
  postId: String!
}